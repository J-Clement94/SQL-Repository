				FINDING 5 OLDEST USERS

SELECT * 
FROM users
ORDER BY created_at
LIMIT 5;

				MOST POPULAR REGISTRATION DATE


SELECT 
	DAYNAME(created_at) AS day,
	COUNT(*) AS total
FROM users
GROUP BY day
ORDER BY total DESC
LIMIT 1;

				FIND INACTIVE USERS (NEVER POSTED A PHOTO)


SELECT username, user_id
FROM users
LEFT JOIN photos
	ON users.id = photos.user_id
WHERE photos.id IS NULL;

				FINDING MOST LIKED PHOTO AND POSTER

SELECT 
COUNT(*) AS likes,
username,
photos.image_url,
photos.id
FROM photos
INNER JOIN likes
	ON likes.photo_id = photos.id
INNER JOIN users
	ON users.id = photos.user_id
GROUP BY photos.id
ORDER BY likes DESC
LIMIT 1;


				AVG NUMBER OF PHOTOS PER USER


SELECT 
	(SELECT COUNT(*) FROM photos) / (SELECT COUNT(*) FROM users) AS 'Average Number of Posts'; 


				TOP 5 MOST USED HASHTAGS


SELECT tags.tag_name, 
COUNT(*) AS count
FROM photo_tags
JOIN tags
	ON tags.id = photo_tags.tag_id
GROUP BY tags.id
ORDER BY count DESC
LIMIT 5;


				FIND USERS WHO HAVE LIKED EVERY POST ON THE SITE (bots)


SELECT username, COUNT(*) AS total
FROM users
JOIN likes
	ON users.id = likes.user_id
GROUP BY users.id
HAVING total = (SELECT COUNT(*) FROM photos)
;
